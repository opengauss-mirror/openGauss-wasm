CREATE EXTENSION wasm_executor;

SELECT wasm_new_instance('/home/opengauss/encrypt_decrypt.wasm', 'gs');

CREATE TABLE users (
username TEXT PRIMARY KEY,
email TEXT,
passwd TEXT
);

CREATE TABLE secrets(secret text);
INSERT INTO secrets VALUES ('s3cretk3y');

CREATE OR REPLACE FUNCTION encrypt_password() RETURNS TRIGGER AS
$$
    DECLARE
    BEGIN
        INSERT INTO users(username, email, passwd) 
            values (NEW.username, NEW.email, gs_encrypt(NEW.passwd, (SELECT secret FROM secrets LIMIT 1)));
        RETURN NEW;
    END
$$LANGUAGE PLPGSQL;

CREATE TRIGGER insert_trigger AFTER INSERT ON users FOR EACH ROW EXECUTE PROCEDURE encrypt_password();

INSERT INTO users VALUES ('peter', 'peter@huawei.com', 'role_ruler');
INSERT INTO users VALUES ('josh', 'josh@huawei.com', 'turkey');

SELECT username, passwd, decrypt(passwd, (SELECT secret FROM secrets LIMIT 1)) AS decrypted FROM users;
